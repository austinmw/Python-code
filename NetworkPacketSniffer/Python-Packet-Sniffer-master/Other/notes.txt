----- Overview -----

Make sure to run as sudo


----- Server -----

 1. Socket object is created
 2. Bind socket to IP address and port
 3. Server can now listen/wait for connections
 4. Clients will attempt to connect, server can then accept connections

Once connection is made, server and client enter request/response (send/receive) loop
When connection is closed, server returns to listening state


----- Resources -----

http://www.binarytides.com/python-packet-sniffer-code-linux/
https://docs.python.org/3.4/library/struct.html#format-characters


----- Tasks -----

Parse responses when encoding is unknown.

Data Size: 597
Encoding: Unknown

b'HTTP/1.1 200 OK\r\nCache-Control: private, max-age=0, no-cache\r\nContent-Type: image/gif\r\nDate: Wed, 23 Dec 2015 06:15:00 GMT\r\nExpires: Mon, 26 Jul 1997 05:00:00 GMT\r\nP3P: CP="NOI DSP COR CURa ADMa DEVa PSAa PSDa OUR BUS COM INT DEM STA LOC"\r\nPragma: no-cache\r\nServer: Apache\r\nSet-Cookie: _PM_UNIQID=4589a04060e6980cb3e65eb54dd9dfd9; expires=Thu, 22-Dec-2016 06:15:00 GMT; path=/; domain=tentaculos.net\r\nSet-Cookie: _PM_CONV_140505413525=0; expires=Thu, 22-Dec-2016 06:15:00 GMT; path=/; domain=tentaculos.net\r\nContent-Length: 43\r\nConnection: keep-alive\r\n\r\nGIF89a\x01\x00\x01\x00\x80\x00\x00\xff\xff\xff\x00\x00\x00!\xf9\x04\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x01\x00\x01\x00\x00\x02\x02D\x01\x00;'
